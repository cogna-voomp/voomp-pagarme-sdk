<?php

declare(strict_types=1);

/*
 * PagarmeApiSDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace PagarmeApiSDKLib\Models;

use PagarmeApiSDKLib\ApiHelper;
use stdClass;

/**
 * The GooglePay Intermediate Signing Key Request
 */
class CreateGooglePayIntermediateSigningKeyRequest implements \JsonSerializable
{
    /**
     * @var array
     */
    private $signedKey = [];

    /**
     * @var array
     */
    private $signatures = [];

    /**
     * Returns Signed Key.
     * Uma mensagem codificada em Base64 com a descrição de pagamento da chave.
     */
    public function getSignedKey(): ?string
    {
        if (count($this->signedKey) == 0) {
            return null;
        }
        return $this->signedKey['value'];
    }

    /**
     * Sets Signed Key.
     * Uma mensagem codificada em Base64 com a descrição de pagamento da chave.
     *
     * @maps signed_key
     */
    public function setSignedKey(?string $signedKey): void
    {
        $this->signedKey['value'] = $signedKey;
    }

    /**
     * Unsets Signed Key.
     * Uma mensagem codificada em Base64 com a descrição de pagamento da chave.
     */
    public function unsetSignedKey(): void
    {
        $this->signedKey = [];
    }

    /**
     * Returns Signatures.
     * Verifica se a origem da chave de assinatura intermediária é o Google. É codificada em Base64 e
     * criada usando o ECDSA.
     *
     * @return string[]|null
     */
    public function getSignatures(): ?array
    {
        if (count($this->signatures) == 0) {
            return null;
        }
        return $this->signatures['value'];
    }

    /**
     * Sets Signatures.
     * Verifica se a origem da chave de assinatura intermediária é o Google. É codificada em Base64 e
     * criada usando o ECDSA.
     *
     * @maps signatures
     *
     * @param string[]|null $signatures
     */
    public function setSignatures(?array $signatures): void
    {
        $this->signatures['value'] = $signatures;
    }

    /**
     * Unsets Signatures.
     * Verifica se a origem da chave de assinatura intermediária é o Google. É codificada em Base64 e
     * criada usando o ECDSA.
     */
    public function unsetSignatures(): void
    {
        $this->signatures = [];
    }

    /**
     * Converts the CreateGooglePayIntermediateSigningKeyRequest object to a human-readable string
     * representation.
     *
     * @return string The string representation of the CreateGooglePayIntermediateSigningKeyRequest object.
     */
    public function __toString(): string
    {
        return ApiHelper::stringify(
            'CreateGooglePayIntermediateSigningKeyRequest',
            ['signedKey' => $this->getSignedKey(), 'signatures' => $this->getSignatures()]
        );
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (!empty($this->signedKey)) {
            $json['signed_key'] = $this->signedKey['value'];
        }
        if (!empty($this->signatures)) {
            $json['signatures'] = $this->signatures['value'];
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
