<?php

declare(strict_types=1);

/*
 * PagarmeApiSDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace PagarmeApiSDKLib\Models;

use PagarmeApiSDKLib\ApiHelper;
use stdClass;

/**
 * Gateway Response
 */
class GetGatewayErrorResponse implements \JsonSerializable
{
    /**
     * @var array
     */
    private $message = [];

    /**
     * Returns Message.
     * The message error
     */
    public function getMessage(): ?string
    {
        if (count($this->message) == 0) {
            return null;
        }
        return $this->message['value'];
    }

    /**
     * Sets Message.
     * The message error
     *
     * @maps message
     */
    public function setMessage(?string $message): void
    {
        $this->message['value'] = $message;
    }

    /**
     * Unsets Message.
     * The message error
     */
    public function unsetMessage(): void
    {
        $this->message = [];
    }

    /**
     * Converts the GetGatewayErrorResponse object to a human-readable string representation.
     *
     * @return string The string representation of the GetGatewayErrorResponse object.
     */
    public function __toString(): string
    {
        return ApiHelper::stringify('GetGatewayErrorResponse', ['message' => $this->getMessage()]);
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (!empty($this->message)) {
            $json['message'] = $this->message['value'];
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
