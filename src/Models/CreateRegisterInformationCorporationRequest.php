<?php

declare(strict_types=1);

/*
 * PagarmeApiSDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace PagarmeApiSDKLib\Models;

use PagarmeApiSDKLib\ApiHelper;
use stdClass;

class CreateRegisterInformationCorporationRequest extends CreateRegisterInformationBaseRequest implements \JsonSerializable
{
    /**
     * @var string
     */
    private $companyName;

    /**
     * @var string
     */
    private $tradingName;

    /**
     * @var int
     */
    private $annualRevenue;

    /**
     * @var array
     */
    private $corporationType = [];

    /**
     * @var array
     */
    private $foundingDate = [];

    /**
     * @var array
     */
    private $cnae = [];

    /**
     * @var CreateManagingPartnerRequest[]
     */
    private $managingPartners;

    /**
     * @var CreateRegisterInformationAddressRequest
     */
    private $mainAddress;

    /**
     * @param string $email
     * @param string $document
     * @param string $type
     * @param CreateRegisterInformationPhoneRequest[] $phoneNumbers
     * @param string $companyName
     * @param string $tradingName
     * @param int $annualRevenue
     * @param CreateManagingPartnerRequest[] $managingPartners
     * @param CreateRegisterInformationAddressRequest $mainAddress
     */
    public function __construct(
        string $email,
        string $document,
        string $type,
        array $phoneNumbers,
        string $companyName,
        string $tradingName,
        int $annualRevenue,
        array $managingPartners,
        CreateRegisterInformationAddressRequest $mainAddress
    ) {
        parent::__construct($email, $document, $type, $phoneNumbers);
        $this->companyName = $companyName;
        $this->tradingName = $tradingName;
        $this->annualRevenue = $annualRevenue;
        $this->managingPartners = $managingPartners;
        $this->mainAddress = $mainAddress;
    }

    /**
     * Returns Company Name.
     */
    public function getCompanyName(): string
    {
        return $this->companyName;
    }

    /**
     * Sets Company Name.
     *
     * @required
     * @maps company_name
     */
    public function setCompanyName(string $companyName): void
    {
        $this->companyName = $companyName;
    }

    /**
     * Returns Trading Name.
     */
    public function getTradingName(): string
    {
        return $this->tradingName;
    }

    /**
     * Sets Trading Name.
     *
     * @required
     * @maps trading_name
     */
    public function setTradingName(string $tradingName): void
    {
        $this->tradingName = $tradingName;
    }

    /**
     * Returns Annual Revenue.
     */
    public function getAnnualRevenue(): int
    {
        return $this->annualRevenue;
    }

    /**
     * Sets Annual Revenue.
     *
     * @required
     * @maps annual_revenue
     */
    public function setAnnualRevenue(int $annualRevenue): void
    {
        $this->annualRevenue = $annualRevenue;
    }

    /**
     * Returns Corporation Type.
     */
    public function getCorporationType(): ?string
    {
        if (count($this->corporationType) == 0) {
            return null;
        }
        return $this->corporationType['value'];
    }

    /**
     * Sets Corporation Type.
     *
     * @maps corporation_type
     */
    public function setCorporationType(?string $corporationType): void
    {
        $this->corporationType['value'] = $corporationType;
    }

    /**
     * Unsets Corporation Type.
     */
    public function unsetCorporationType(): void
    {
        $this->corporationType = [];
    }

    /**
     * Returns Founding Date.
     */
    public function getFoundingDate(): ?string
    {
        if (count($this->foundingDate) == 0) {
            return null;
        }
        return $this->foundingDate['value'];
    }

    /**
     * Sets Founding Date.
     *
     * @maps founding_date
     */
    public function setFoundingDate(?string $foundingDate): void
    {
        $this->foundingDate['value'] = $foundingDate;
    }

    /**
     * Unsets Founding Date.
     */
    public function unsetFoundingDate(): void
    {
        $this->foundingDate = [];
    }

    /**
     * Returns Cnae.
     */
    public function getCnae(): ?string
    {
        if (count($this->cnae) == 0) {
            return null;
        }
        return $this->cnae['value'];
    }

    /**
     * Sets Cnae.
     *
     * @maps cnae
     */
    public function setCnae(?string $cnae): void
    {
        $this->cnae['value'] = $cnae;
    }

    /**
     * Unsets Cnae.
     */
    public function unsetCnae(): void
    {
        $this->cnae = [];
    }

    /**
     * Returns Managing Partners.
     *
     * @return CreateManagingPartnerRequest[]
     */
    public function getManagingPartners(): array
    {
        return $this->managingPartners;
    }

    /**
     * Sets Managing Partners.
     *
     * @required
     * @maps managing_partners
     *
     * @param CreateManagingPartnerRequest[] $managingPartners
     */
    public function setManagingPartners(array $managingPartners): void
    {
        $this->managingPartners = $managingPartners;
    }

    /**
     * Returns Main Address.
     */
    public function getMainAddress(): CreateRegisterInformationAddressRequest
    {
        return $this->mainAddress;
    }

    /**
     * Sets Main Address.
     *
     * @required
     * @maps main_address
     */
    public function setMainAddress(CreateRegisterInformationAddressRequest $mainAddress): void
    {
        $this->mainAddress = $mainAddress;
    }

    /**
     * Converts the CreateRegisterInformationCorporationRequest object to a human-readable string
     * representation.
     *
     * @return string The string representation of the CreateRegisterInformationCorporationRequest object.
     */
    public function __toString(): string
    {
        return ApiHelper::stringify(
            'CreateRegisterInformationCorporationRequest',
            [
                'companyName' => $this->companyName,
                'tradingName' => $this->tradingName,
                'annualRevenue' => $this->annualRevenue,
                'corporationType' => $this->getCorporationType(),
                'foundingDate' => $this->getFoundingDate(),
                'cnae' => $this->getCnae(),
                'managingPartners' => $this->managingPartners,
                'mainAddress' => $this->mainAddress
            ],
            parent::__toString()
        );
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['company_name']         = $this->companyName;
        $json['trading_name']         = $this->tradingName;
        $json['annual_revenue']       = $this->annualRevenue;
        if (!empty($this->corporationType)) {
            $json['corporation_type'] = $this->corporationType['value'];
        }
        if (!empty($this->foundingDate)) {
            $json['founding_date']    = $this->foundingDate['value'];
        }
        if (!empty($this->cnae)) {
            $json['cnae']             = $this->cnae['value'];
        }
        $json['managing_partners']    = $this->managingPartners;
        $json['main_address']         = $this->mainAddress;
        $json = array_merge($json, parent::jsonSerialize(true));

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
