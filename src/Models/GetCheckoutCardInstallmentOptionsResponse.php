<?php

declare(strict_types=1);

/*
 * PagarmeApiSDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace PagarmeApiSDKLib\Models;

use PagarmeApiSDKLib\ApiHelper;
use stdClass;

class GetCheckoutCardInstallmentOptionsResponse implements \JsonSerializable
{
    /**
     * @var int|null
     */
    private $number;

    /**
     * @var int|null
     */
    private $total;

    /**
     * Returns Number.
     * Número de parcelas
     */
    public function getNumber(): ?int
    {
        return $this->number;
    }

    /**
     * Sets Number.
     * Número de parcelas
     *
     * @maps number
     */
    public function setNumber(?int $number): void
    {
        $this->number = $number;
    }

    /**
     * Returns Total.
     * Valor total da compra
     */
    public function getTotal(): ?int
    {
        return $this->total;
    }

    /**
     * Sets Total.
     * Valor total da compra
     *
     * @maps total
     */
    public function setTotal(?int $total): void
    {
        $this->total = $total;
    }

    /**
     * Converts the GetCheckoutCardInstallmentOptionsResponse object to a human-readable string
     * representation.
     *
     * @return string The string representation of the GetCheckoutCardInstallmentOptionsResponse object.
     */
    public function __toString(): string
    {
        return ApiHelper::stringify(
            'GetCheckoutCardInstallmentOptionsResponse',
            ['number' => $this->number, 'total' => $this->total]
        );
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['number'] = $this->number;
        $json['total']  = $this->total;

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
