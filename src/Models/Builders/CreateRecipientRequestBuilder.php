<?php

declare(strict_types=1);

/*
 * PagarmeApiSDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace PagarmeApiSDKLib\Models\Builders;

use Core\Utils\CoreHelper;
use PagarmeApiSDKLib\Models\CreateBankAccountRequest;
use PagarmeApiSDKLib\Models\CreateRecipientRequest;
use PagarmeApiSDKLib\Models\CreateRegisterInformationBaseRequest;
use PagarmeApiSDKLib\Models\CreateTransferSettingsRequest;

/**
 * Builder for model CreateRecipientRequest
 *
 * @see CreateRecipientRequest
 */
class CreateRecipientRequestBuilder
{
    /**
     * @var CreateRecipientRequest
     */
    private $instance;

    private function __construct(CreateRecipientRequest $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new Create Recipient Request Builder object.
     *
     * @param CreateBankAccountRequest $defaultBankAccount
     * @param array<string,string> $metadata
     * @param string $code
     * @param string $paymentMode
     */
    public static function init(
        CreateBankAccountRequest $defaultBankAccount,
        array $metadata,
        string $code,
        string $paymentMode
    ): self {
        return new self(new CreateRecipientRequest($defaultBankAccount, $metadata, $code, $paymentMode));
    }

    /**
     * Sets name field.
     *
     * @param string|null $value
     */
    public function name(?string $value): self
    {
        $this->instance->setName($value);
        return $this;
    }

    /**
     * Unsets name field.
     */
    public function unsetName(): self
    {
        $this->instance->unsetName();
        return $this;
    }

    /**
     * Sets email field.
     *
     * @param string|null $value
     */
    public function email(?string $value): self
    {
        $this->instance->setEmail($value);
        return $this;
    }

    /**
     * Unsets email field.
     */
    public function unsetEmail(): self
    {
        $this->instance->unsetEmail();
        return $this;
    }

    /**
     * Sets description field.
     *
     * @param string|null $value
     */
    public function description(?string $value): self
    {
        $this->instance->setDescription($value);
        return $this;
    }

    /**
     * Unsets description field.
     */
    public function unsetDescription(): self
    {
        $this->instance->unsetDescription();
        return $this;
    }

    /**
     * Sets document field.
     *
     * @param string|null $value
     */
    public function document(?string $value): self
    {
        $this->instance->setDocument($value);
        return $this;
    }

    /**
     * Unsets document field.
     */
    public function unsetDocument(): self
    {
        $this->instance->unsetDocument();
        return $this;
    }

    /**
     * Sets type field.
     *
     * @param string|null $value
     */
    public function type(?string $value): self
    {
        $this->instance->setType($value);
        return $this;
    }

    /**
     * Unsets type field.
     */
    public function unsetType(): self
    {
        $this->instance->unsetType();
        return $this;
    }

    /**
     * Sets transfer settings field.
     *
     * @param CreateTransferSettingsRequest|null $value
     */
    public function transferSettings(?CreateTransferSettingsRequest $value): self
    {
        $this->instance->setTransferSettings($value);
        return $this;
    }

    /**
     * Sets register information field.
     *
     * @param CreateRegisterInformationBaseRequest|null $value
     */
    public function registerInformation(?CreateRegisterInformationBaseRequest $value): self
    {
        $this->instance->setRegisterInformation($value);
        return $this;
    }

    /**
     * Unsets register information field.
     */
    public function unsetRegisterInformation(): self
    {
        $this->instance->unsetRegisterInformation();
        return $this;
    }

    /**
     * Initializes a new Create Recipient Request object.
     */
    public function build(): CreateRecipientRequest
    {
        return CoreHelper::clone($this->instance);
    }
}
