<?php

declare(strict_types=1);

/*
 * PagarmeApiSDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace PagarmeApiSDKLib\Models\Builders;

use Core\Utils\CoreHelper;
use PagarmeApiSDKLib\Models\CreateKYCLinkResponse;

/**
 * Builder for model CreateKYCLinkResponse
 *
 * @see CreateKYCLinkResponse
 */
class CreateKYCLinkResponseBuilder
{
    /**
     * @var CreateKYCLinkResponse
     */
    private $instance;

    private function __construct(CreateKYCLinkResponse $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new Create KYC Link Response Builder object.
     */
    public static function init(): self
    {
        return new self(new CreateKYCLinkResponse());
    }

    /**
     * Sets base 64 field.
     *
     * @param string|null $value
     */
    public function base64(?string $value): self
    {
        $this->instance->setBase64($value);
        return $this;
    }

    /**
     * Unsets base 64 field.
     */
    public function unsetBase64(): self
    {
        $this->instance->unsetBase64();
        return $this;
    }

    /**
     * Sets url field.
     *
     * @param string|null $value
     */
    public function url(?string $value): self
    {
        $this->instance->setUrl($value);
        return $this;
    }

    /**
     * Unsets url field.
     */
    public function unsetUrl(): self
    {
        $this->instance->unsetUrl();
        return $this;
    }

    /**
     * Sets expiration date field.
     *
     * @param string|null $value
     */
    public function expirationDate(?string $value): self
    {
        $this->instance->setExpirationDate($value);
        return $this;
    }

    /**
     * Unsets expiration date field.
     */
    public function unsetExpirationDate(): self
    {
        $this->instance->unsetExpirationDate();
        return $this;
    }

    /**
     * Initializes a new Create KYC Link Response object.
     */
    public function build(): CreateKYCLinkResponse
    {
        return CoreHelper::clone($this->instance);
    }
}
